@using Applications.DTos.OrderDTOs
@using Applications.DTos.OrderItemsDTOs
@using Models
@model OrderDto

@{
    ViewData["Title"] = "Order Details - Admin";
    Layout = "~/Areas/Admin/Views/Shared/_Admin.cshtml";
}

<div class="container mt-5 mb-5">
    <div class="row">
        <div class="col-md-8">
            <h2>Order #@Model.Id</h2>
            <hr />

            <!-- Customer Information -->
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Customer Information</h5>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <strong>Name:</strong><br />
                            @Model.CustomerName
                        </div>
                        <div class="col-md-6">
                            <strong>Phone:</strong><br />
                            @Model.CustomerPhone
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <strong>Email:</strong><br />
                            @Model.CustomerEmail
                        </div>
                        <div class="col-md-6">
                            <strong>Order Type:</strong><br />
                            <span class="badge bg-info">@Model.OrderType</span>
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.DeliveryAddress))
                    {
                        <div class="row">
                            <div class="col-md-12">
                                <strong>Delivery Address:</strong><br />
                                @Model.DeliveryAddress
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Order Items -->
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Order Items</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Item Name</th>
                                    <th>Quantity</th>
                                    <th>Unit Price</th>
                                    <th>Subtotal</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderItems ?? new List<OrderItemsDto>())
                                {
                                    <tr>
                                        <td>@item.MenuItem?.Name</td>
                                        <td>@item.Quantity</td>
                                        <td>$@item.UnitPrice.ToString("F2")</td>
                                        <td>$@item.Subtotal.ToString("F2")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Order Status & Dates -->
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Order Information</h5>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <strong>Order Date:</strong><br />
                            @Model.OrderDate.ToString("MM/dd/yyyy hh:mm tt")
                        </div>
                        <div class="col-md-6">
                            <strong>Current Status:</strong><br />
                            @{
                                string statusClass = Model.OrderStatus switch
                                {
                                    OrderStatus.Pending => "bg-warning text-dark",
                                    OrderStatus.Preparing => "bg-info",
                                    OrderStatus.Ready => "bg-primary",
                                    OrderStatus.Delivered => "bg-success",
                                    OrderStatus.Cancelled => "bg-danger",
                                    _ => "bg-secondary"
                                };
                            }
                            <span class="badge @statusClass fs-6">@Model.OrderStatus</span>
                        </div>
                    </div>

                    @if (Model.EstimatedDeliveryTime.HasValue)
                    {
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <strong>Estimated Delivery:</strong><br />
                                @Model.EstimatedDeliveryTime.Value.ToString("MM/dd/yyyy hh:mm tt")
                            </div>
                        </div>
                    }

                    @if (Model.LastUpdated.HasValue)
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <strong>Last Updated:</strong><br />
                                @Model.LastUpdated.Value.ToString("MM/dd/yyyy hh:mm tt")
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Sidebar - Price Summary & Admin Actions -->
        <div class="col-md-4">
            <div class="card sticky-top" style="top: 20px;">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Price Summary</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-2">
                        <span>Subtotal:</span>
                        <span>$@Model.Subtotal.ToString("F2")</span>
                    </div>

                    @if (Model.DiscountAmount > 0)
                    {
                        <div class="d-flex justify-content-between mb-2 text-success">
                            <span>Discount:</span>
                            <span>-$@Model.DiscountAmount.ToString("F2")</span>
                        </div>
                    }

                    <div class="d-flex justify-content-between mb-2 border-bottom pb-2">
                        <span>Tax (8.5%):</span>
                        <span>$@Model.TaxAmount.ToString("F2")</span>
                    </div>

                    <div class="d-flex justify-content-between mb-4">
                        <h5>Total:</h5>
                        <h5 class="text-success">$@Model.TotalAmount.ToString("F2")</h5>
                    </div>

                    <!-- Admin Actions -->
                    <hr />
                    <h6 class="mb-3">Admin Actions</h6>

                    <!-- Update Status -->
                    <form method="post" asp-action="UpdateStatus" asp-controller="Order" asp-area="Admin" class="mb-3">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <label class="form-label fw-bold">Update Status:</label>
                        <select name="status" class="form-select form-select-sm mb-2">
                            <option value=""> --- Select Status -- </option>
                            <option value="0">Pending</option>
                            <option value="1">Preparing</option>
                            <option value="2">Ready</option>
                            <option value="3">Delivered</option>
                            @if (Model.OrderStatus != OrderStatus.Delivered || Model.OrderStatus != OrderStatus.Ready)
                            {
                            <option value="4">Cancelled</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-sm btn-warning w-100">
                            <i class="bi bi-arrow-repeat me-1"></i>Update Status
                        </button>
                    </form>

                    <!-- Delete Order -->
                    <form method="post" asp-action="Delete" asp-controller="Order" asp-area="Admin">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <button type="submit" class="btn btn-sm btn-danger w-100" 
                                onclick="return confirm('Are you sure you want to delete this order?')">
                            <i class="bi bi-trash me-1"></i>Delete Order
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-4">
        <a href="@Url.Action("Index", "Order", new { area = "Admin" })" class="btn btn-secondary">
            <i class="bi bi-arrow-left me-1"></i>Back to Orders
        </a>
        <a href="@Url.Action("Getall", "MenuItem", new { area = "Admin" })" class="btn btn-primary">
            <i class="bi bi-speedometer2 me-1"></i>Back to Dashboard
        </a>
    </div>
</div>
