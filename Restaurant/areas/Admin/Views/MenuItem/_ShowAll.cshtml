@model List<ItemsDto>
@{
    ViewData["Title"] = "GetAll";
}
<!-- Bootstrap Icons CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">

<style>
    :root {
        --primary-color: #667eea;
        --secondary-color: #764ba2;
        --success-color: #10b981;
        --danger-color: #ef4444;
        --warning-color: #f59e0b;
        --info-color: #3b82f6;
    }

    body {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
    }

    .page-header {
        background: white;
        border-radius: 15px;
        padding: 25px 30px;
        margin-bottom: 30px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        display: flex;
        justify-content: space-between;
        align-items: center;
        animation: slideDown 0.5s ease;
    }

        .page-header h2 {
            color: var(--primary-color);
            font-weight: 700;
            margin: 0;
            font-size: 2rem;
        }

    .btn-create {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
        border: none;
        color: white !important;
        padding: 12px 30px;
        border-radius: 25px;
        font-weight: 600;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        text-decoration: none !important;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .btn-create:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
            color: white !important;
        }

    .items-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 25px;
        animation: fadeIn 0.8s ease;
    }

    .item-card {
        background: white;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        position: relative;
    }

        .item-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);
        }

    .item-image-container {
        width: 100%;
        height: 220px;
        overflow: hidden;
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
        position: relative;
    }

    .item-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .item-card:hover .item-image {
        transform: scale(1.1);
    }

    .no-image {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 4rem;
    }

    .stock-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        padding: 8px 16px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.85rem;
        backdrop-filter: blur(10px);
        color: white;
    }

        .stock-badge.in-stock {
            background: rgba(16, 185, 129, 0.9);
        }

        .stock-badge.out-of-stock {
            background: rgba(239, 68, 68, 0.9);
        }

    .item-content {
        padding: 20px;
    }

    .item-header {
        display: flex;
        justify-content: space-between;
        align-items: start;
        margin-bottom: 12px;
    }

    .item-name {
        font-size: 1.4rem;
        font-weight: 700;
        color: #1f2937;
        margin: 0;
    }

    .item-price {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
        color: white;
        padding: 6px 14px;
        border-radius: 20px;
        font-weight: 700;
        font-size: 1rem;
        white-space: nowrap;
    }

    .item-category {
        display: inline-block;
        background: #f3f4f6;
        color: #6b7280;
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.85rem;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .item-description {
        color: #6b7280;
        font-size: 0.95rem;
        line-height: 1.6;
        margin-bottom: 20px;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        min-height: 48px;
    }

    .item-actions {
        display: flex;
        gap: 8px;
        padding-top: 15px;
        border-top: 1px solid #e5e7eb;
    }

    .action-btn {
        flex: 1;
        padding: 10px 15px;
        border-radius: 10px;
        border: none;
        font-weight: 600;
        font-size: 0.9rem;
        cursor: pointer;
        transition: all 0.2s ease;
        text-decoration: none !important;
        text-align: center;
        display: inline-block;
    }

    .btn-details {
        background: #e0e7ff;
        color: var(--info-color) !important;
    }

        .btn-details:hover {
            background: var(--info-color);
            color: white !important;
        }

    .btn-edit {
        background: #fef3c7;
        color: var(--warning-color) !important;
    }

        .btn-edit:hover {
            background: var(--warning-color);
            color: white !important;
        }

    .btn-delete {
        background: #fee2e2;
        color: var(--danger-color) !important;
    }

        .btn-delete:hover {
            background: var(--danger-color);
            color: white !important;
        }

    .empty-state {
        text-align: center;
        padding: 80px 20px;
        background: white;
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
    }

    .empty-state-icon {
        font-size: 6rem;
        margin-bottom: 20px;
        opacity: 0.3;
    }

    .empty-state h3 {
        color: #6b7280;
        margin-bottom: 10px;
    }

    .empty-state p {
        color: #9ca3af;
    }

    @@keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    @@media (max-width: 768px) {
        .items-grid {
            grid-template-columns: 1fr;
        }

        .page-header {
            flex-direction: column;
            gap: 15px;
            text-align: center;
        }

        .item-actions {
            flex-direction: column;
        }
    }
</style>

<div class="container mt-4">
    <!-- Header Section -->
    <div class="page-header">
        <h2>
            <i class="bi bi-grid-3x3-gap-fill"></i> Menu Items
        </h2>
        <a asp-action="Create" class="btn-create">
            <i class="bi bi-plus-circle"></i> Create New Item
        </a>
    </div>

    @if (Model != null && Model.Any())
    {
        <!-- Items Grid -->
        <div class="items-grid">
            @foreach (var item in Model)
            {
                <div class="item-card">
                    <!-- Image Container -->
                    <div class="item-image-container">
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" alt="@item.Name" class="item-image" />
                        }
                        else
                        {
                            <div class="no-image">🍽️</div>
                        }

                        <!-- Stock Badge -->
                        <span class="stock-badge @(item.Quantity > 0 ? "in-stock" : "out-of-stock")">
                            @if (item.Quantity > 0)
                            {
                                <i class="bi bi-check-circle"></i>
                                <text>In Stock</text>
                            }
                            else
                            {
                                <i class="bi bi-x-circle"></i>
                                <text>Out of Stock</text>
                            }
                        </span>
                    </div>

                    <!-- Content -->
                    <div class="item-content">
                        <div class="item-header">
                            <h3 class="item-name">@item.Name</h3>
                            <span class="item-price">@item.Price.ToString("F2") EGP</span>
                        </div>

                        <span class="item-category">
                            <i class="bi bi-tag"></i> @item.Category.Name
                        </span>

                        <p class="item-description">
                            @(string.IsNullOrEmpty(item.Description) ? "No description available" : item.Description)
                        </p>

                        <!-- Actions -->
                        <div class="item-actions">
                            <a asp-action="Details" asp-route-id="@item.Id" class="action-btn btn-details">
                                <i class="bi bi-eye"></i> Details
                            </a>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="action-btn btn-edit">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.Id"
                               class="action-btn btn-delete"
                               onclick="return confirm('Are you sure you want to delete @item.Name?');">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <!-- Empty State -->
        <div class="empty-state">
            <div class="empty-state-icon">📦</div>
            <h3>No Menu Items Found</h3>
            <p>Start by creating your first menu item</p>
            <a asp-action="Create" class="btn-create mt-3">
                <i class="bi bi-plus-circle"></i> Create First Item
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Add staggered animation to cards
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.item-card');
            cards.forEach((card, index) => {
                card.style.animation = `fadeIn 0.5s ease ${index * 0.1}s both`;
            });
        });
    </script>
}