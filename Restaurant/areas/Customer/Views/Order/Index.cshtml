@using Applications.DTos.OrderDTOs
@model List<OrderDto>

@{
    ViewData["Title"] = "All Orders - Admin";
    Layout = "~/Areas/Customer/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-5">
    <h2 class="mb-4">
        <i class="bi bi-bag-check me-2"></i>All Orders
    </h2>

    @if (Model == null || Model.Count == 0)
    {
        <div class="alert alert-info">
            <p>No orders found.</p>
        </div>
    }
    else
    {
        <div class="card shadow">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Phone</th>
                                <th>Total</th>
                                <th>Status</th>
                                <th>Type</th>
                                <th>Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model)
                            {
                                <tr>
                                    <td><strong>#@order.Id</strong></td>
                                    <td>@order.CustomerName</td>
                                    <td>@order.CustomerPhone</td>
                                    <td><strong class="text-success">$@order.TotalAmount.ToString("F2")</strong></td>
                                    <td>
                                        @{
                                            string statusClass = order.OrderStatus switch
                                            {
                                                OrderStatus.Pending => "bg-warning text-dark",
                                                OrderStatus.Preparing => "bg-info",
                                                OrderStatus.Ready => "bg-primary",
                                                OrderStatus.Delivered => "bg-success",
                                                OrderStatus.Cancelled => "bg-danger",
                                                _ => "bg-secondary"
                                            };
                                        }
                                        <span class="badge @statusClass">@order.OrderStatus</span>
                                    </td>
                                    <td>
                                        <span class="badge bg-light text-dark">@order.OrderType</span>
                                    </td>
                                    <td>@order.OrderDate.ToString("MM/dd/yyyy HH:mm")</td>
                                    <td>
                                        <a href="@Url.Action("Details", "Order", new { id = order.Id, area = "Customer" })"
                                           class="btn btn-sm btn-info">
                                            <i class="bi bi-eye"></i> View
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    <div class="mt-3">
        <a href="@Url.Action("GetAll", "MenuItem", new { area = "Customer" })" class="btn btn-secondary">
            <i class="bi bi-arrow-left me-1"></i>Back to Menu
        </a>
    </div>
</div>

<style>
    .table-hover tbody tr:hover {
        background-color: #f8f9fa;
    }
</style>
